{"is_source_file": true, "format": "JavaScript", "description": "This file defines API client functions for interacting with a backend REST API, using axios for HTTP requests. It includes setup for authorization headers, endpoint functions for auth, boards, sprints, tasks, and teams, with various CRUD operations and parameters.", "external_files": ["axios"], "external_methods": ["localStorage.getItem", "process.env.REACT_APP_API_BASE_URL", "axios.create", "axios.post", "axios.get", "axios.patch"], "published": ["authApi", "boardsApi", "sprintsApi", "tasksApi", "teamsApi"], "classes": [], "methods": [{"name": "register(payload)", "description": "POST /api/auth/register, registers a new user.", "scope": "authApi", "scopeKind": "class"}, {"name": "login({ email, password })", "description": "POST /api/auth/login, authenticates a user with email and password.", "scope": "authApi", "scopeKind": "class"}, {"name": "me()", "description": "GET /api/auth/me, retrieves current user info.", "scope": "authApi", "scopeKind": "class"}, {"name": "listByTeam(teamId, { limit = 100, offset = 0 } = {})", "description": "GET /api/boards/team/{teamId}, lists boards for a team.", "scope": "boardsApi", "scopeKind": "class"}, {"name": "create(payload)", "description": "POST /api/boards, creates a new board.", "scope": "tasksApi", "scopeKind": "class"}, {"name": "get", "description": "GET /api/boards/{boardId}, retrieves a specific board."}, {"name": "listByBoard (sprintsApi)", "description": "GET /api/sprints/board/{boardId}, lists sprints for a board."}, {"name": "create (sprintsApi)", "description": "POST /api/sprints, creates a new sprint."}, {"name": "get (sprintsApi)", "description": "GET /api/sprints/{sprintId}, retrieves a specific sprint."}, {"name": "listByBoard (tasksApi)", "description": "GET /api/tasks/board/{boardId}, lists tasks on a board with optional filters."}, {"name": "create (tasksApi)", "description": "POST /api/tasks, creates a new task."}, {"name": "get (tasksApi)", "description": "GET /api/tasks/{taskId}, retrieves a specific task."}, {"name": "updateStatus", "description": "PATCH /api/tasks/{taskId}/status, updates task status."}, {"name": "list (teamsApi)", "description": "GET /api/teams, lists teams."}, {"name": "get (teamsApi)", "description": "GET /api/teams/{teamId}, retrieves a specific team."}, {"name": "list({ limit = 100, offset = 0 } = {})", "scope": "teamsApi", "scopeKind": "class", "description": "unavailable"}, {"name": "listByBoard(boardId, { limit = 100, offset = 0 } = {})", "scope": "sprintsApi", "scopeKind": "class", "description": "unavailable"}, {"name": "listByBoard(boardId, { status, assigneeId, limit = 100, offset = 0 } = {})", "scope": "tasksApi", "scopeKind": "class", "description": "unavailable"}], "calls": ["api.post", "api.get", "api.patch", "localStorage.getItem", "process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001'"], "search-terms": ["axios setup", "authApi", "boardsApi", "sprintsApi", "tasksApi", "teamsApi", "REST API client", "API wrapper", "React environment"], "state": 2, "file_id": 15, "knowledge_revision": 66, "git_revision": "e9a65d0c41dee61fba6fbcc5dcb4bf0d464b5e6c", "ctags": [{"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const api = axios.create({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "authApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const authApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "baseURL", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^const baseURL = process.env.REACT_APP_API_BASE_URL || 'http:\\/\\/localhost:3001';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "boardsApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const boardsApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async create(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async create(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async create(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async list({ limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "({ limit = 100, offset = 0 } = {})", "scope": "teamsApi", "scopeKind": "class"}, {"_type": "tag", "name": "listByBoard", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async listByBoard(boardId, { limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(boardId, { limit = 100, offset = 0 } = {})", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "listByBoard", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async listByBoard(boardId, { status, assigneeId, limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(boardId, { status, assigneeId, limit = 100, offset = 0 } = {})", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "listByTeam", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async listByTeam(teamId, { limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(teamId, { limit = 100, offset = 0 } = {})", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async login({ email, password }) {$/", "language": "JavaScript", "kind": "method", "signature": "({ email, password })", "scope": "authApi", "scopeKind": "class"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async me() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "authApi", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async register(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "authApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/boards\\/${boardId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/sprints\\/${sprintId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/tasks\\/${taskId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/teams\\/${teamId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "teamsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.patch(`\\/api\\/tasks\\/${taskId}\\/status`, { status });$/", "language": "JavaScript", "kind": "constant", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "sprintsApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const sprintsApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "tasksApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const tasksApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "teamsApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const teamsApi = {$/", "language": "JavaScript", "kind": "class"}], "hash": "56d56f9ab23ba00f97cf580983f34212", "format-version": 4, "code-base-name": "scrum_mind_frontend", "filename": "scrum_mind_frontend/src/services/api.js", "revision_history": [{"66": "e9a65d0c41dee61fba6fbcc5dcb4bf0d464b5e6c"}]}