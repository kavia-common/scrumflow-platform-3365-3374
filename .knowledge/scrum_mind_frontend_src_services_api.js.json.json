{"is_source_file": true, "format": "JavaScript", "description": "This file contains API service functions for frontend communication with a backend server, utilizing axios for HTTP requests. It defines methods for authentication, boards, sprints, tasks, and teams endpoints, managing request configuration including tokens and headers.", "external_files": ["axios", "process.env", "localStorage"], "external_methods": ["axios.create", "localStorage.getItem"], "published": ["authApi", "boardsApi", "sprintsApi", "tasksApi", "teamsApi"], "classes": [], "methods": [{"name": "register(payload)", "description": "Registers a new user via POST /api/auth/register with provided payload.", "scope": "authApi", "scopeKind": "class"}, {"name": "login({ email, password })", "description": "Authenticates a user using provided email and password via POST /api/auth/login with URL-encoded form data.", "scope": "authApi", "scopeKind": "class"}, {"name": "me()", "description": "Retrieves current user's info via GET /api/auth/me.", "scope": "authApi", "scopeKind": "class"}, {"name": "listByTeam(teamId, { limit = 100, offset = 0 } = {})", "description": "Lists boards associated with a specific team ID.", "scope": "boardsApi", "scopeKind": "class"}, {"name": "list({ limit = 100, offset = 0 } = {})", "description": "Lists all boards.", "scope": "teamsApi", "scopeKind": "class"}, {"name": "create(payload)", "description": "Creates a new board.", "scope": "tasksApi", "scopeKind": "class"}, {"name": "get", "description": "Retrieves a specific board by its ID."}, {"name": "updateTaskStatus", "description": "Updates the status of a task within a board."}, {"name": "listByBoard (sprintsApi)", "description": "Lists sprints associated with a specific board."}, {"name": "list (sprintsApi)", "description": "Lists all sprints."}, {"name": "create (sprintsApi)", "description": "Creates a new sprint."}, {"name": "get (sprintsApi)", "description": "Retrieves a specific sprint by ID."}, {"name": "update (sprintsApi)", "description": "Updates a sprint by ID."}, {"name": "listByBoard (tasksApi)", "description": "Lists tasks for a specific board, with optional filters."}, {"name": "create (tasksApi)", "description": "Creates a new task."}, {"name": "get (tasksApi)", "description": "Retrieves a task by ID."}, {"name": "updateStatus", "description": "Updates the status of a specific task."}, {"name": "list (teamsApi)", "description": "Lists all teams."}, {"name": "get (teamsApi)", "description": "Retrieves team info by ID."}, {"name": "invite", "description": "Sends an invitation to a user to join a team."}, {"name": "listByBoard(boardId, { limit = 100, offset = 0 } = {})", "scope": "sprintsApi", "scopeKind": "class", "description": "unavailable"}, {"name": "listByBoard(boardId, { status, assigneeId, limit = 100, offset = 0 } = {})", "scope": "tasksApi", "scopeKind": "class", "description": "unavailable"}], "calls": ["axios.create", "localStorage.getItem", "api.post", "api.get", "api.patch"], "search-terms": ["API service functions", "authApi", "boardsApi", "sprintsApi", "tasksApi", "teamsApi", "axios instance", "frontend API calls", "React environment", "token interceptor"], "state": 2, "file_id": 15, "knowledge_revision": 77, "git_revision": "92fbe1b94fbabd629a8f2a85c228ede5c52bc010", "revision_history": [{"66": "e9a65d0c41dee61fba6fbcc5dcb4bf0d464b5e6c"}, {"75": "92fbe1b94fbabd629a8f2a85c228ede5c52bc010"}, {"76": "92fbe1b94fbabd629a8f2a85c228ede5c52bc010"}, {"77": "92fbe1b94fbabd629a8f2a85c228ede5c52bc010"}], "ctags": [{"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const api = axios.create({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "authApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const authApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "baseURL", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^const baseURL = process.env.REACT_APP_API_BASE_URL || 'http:\\/\\/localhost:3001';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "boardsApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const boardsApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async create(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async create(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async create(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async list({ limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "({ limit = 100, offset = 0 } = {})", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async list({ limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "({ limit = 100, offset = 0 } = {})", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async list({ limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "({ limit = 100, offset = 0 } = {})", "scope": "teamsApi", "scopeKind": "class"}, {"_type": "tag", "name": "listByBoard", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async listByBoard(boardId, { limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(boardId, { limit = 100, offset = 0 } = {})", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "listByBoard", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async listByBoard(boardId, { status, assigneeId, limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(boardId, { status, assigneeId, limit = 100, offset = 0 } = {})", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "listByTeam", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async listByTeam(teamId, { limit = 100, offset = 0 } = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(teamId, { limit = 100, offset = 0 } = {})", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async login({ email, password }) {$/", "language": "JavaScript", "kind": "method", "signature": "({ email, password })", "scope": "authApi", "scopeKind": "class"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async me() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "authApi", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^  async register(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "authApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/boards\\/${boardId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/sprints\\/${sprintId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/tasks\\/${taskId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.get(`\\/api\\/teams\\/${teamId}`);$/", "language": "JavaScript", "kind": "constant", "scope": "teamsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.patch(`\\/api\\/boards\\/${boardId}\\/tasks\\/${taskId}\\/status`, { status /", "language": "JavaScript", "kind": "constant", "scope": "boardsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.patch(`\\/api\\/sprints\\/${sprintId}`, payload);$/", "language": "JavaScript", "kind": "constant", "scope": "sprintsApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.patch(`\\/api\\/tasks\\/${taskId}\\/status`, { status });$/", "language": "JavaScript", "kind": "constant", "scope": "tasksApi", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^    const res = await api.post('\\/api\\/teams\\/invite', payload);$/", "language": "JavaScript", "kind": "constant", "scope": "teamsApi", "scopeKind": "class"}, {"_type": "tag", "name": "sprintsApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const sprintsApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "tasksApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const tasksApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "teamsApi", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/services/api.js", "pattern": "/^export const teamsApi = {$/", "language": "JavaScript", "kind": "class"}], "hash": "531b56d9aa813173466788425856f5da", "format-version": 4, "code-base-name": "scrum_mind_frontend", "filename": "scrum_mind_frontend/src/services/api.js"}