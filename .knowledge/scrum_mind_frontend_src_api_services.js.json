{"is_source_file": true, "format": "JavaScript", "description": "This file defines a service layer module (`services.js`) that maps backend OpenAPI endpoints to frontend functions for handling boards, sprints, tasks, team members, and progress summaries in a Scrum project. It normalizes backend responses to frontend data shapes.", "external_files": ["./client"], "external_methods": ["api.get", "api.post", "api.put"], "published": ["Services"], "classes": [], "methods": [{"name": "listBoards()", "description": "Fetches and returns a list of boards from the backend API.", "scope": "Services", "scopeKind": "class"}, {"name": "createBoard(payload)", "description": "Creates a new board with the provided payload.", "scope": "Services", "scopeKind": "class"}, {"name": "listSprints(params = {})", "description": "Fetches and returns a list of sprints with optional filtering parameters.", "scope": "Services", "scopeKind": "class"}, {"name": "listTasks(params = {})", "description": "Fetches and normalizes a list of tasks, applying frontend field mappings.", "scope": "Services", "scopeKind": "class"}, {"name": "createTask(payload)", "description": "Creates a new task with the specified payload, mapping frontend fields to backend.", "scope": "Services", "scopeKind": "class"}, {"name": "updateTask(id, changes)", "description": "Updates an existing task identified by `id`, applying changes and normalizing response.", "scope": "Services", "scopeKind": "class"}, {"name": "moveTask(id, { status, sprintId, boardId })", "description": "Changes task status, sprint, or board, by calling move endpoint and normalizing response.", "scope": "Services", "scopeKind": "class"}, {"name": "listTeam()", "description": "Retrieves a list of team members.", "scope": "Services", "scopeKind": "class"}, {"name": "getProgressSummary(params = {})", "description": "Fetches a summary of progress metrics with optional filters.", "scope": "Services", "scopeKind": "class"}], "calls": ["api.get", "api.post", "api.put"], "search-terms": ["Services", "API endpoints", "task normalization", "board", "sprint", "task", "team", "progress"], "state": 2, "file_id": 34, "knowledge_revision": 74, "git_revision": "", "ctags": [{"_type": "tag", "name": "Services", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^export const Services = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "assignee_id", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      assignee_id: payload.assigneeId ?? null,$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "board_id", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      board_id: boardId ?? null,$/", "language": "JavaScript", "kind": "property", "scope": "Services.moveTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "board_id", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      board_id: payload.boardId,$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^    const body = {$/", "language": "JavaScript", "kind": "class", "scope": "Services.createTask", "scopeKind": "class"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^    const body = {$/", "language": "JavaScript", "kind": "class", "scope": "Services.moveTask", "scopeKind": "class"}, {"_type": "tag", "name": "createBoard", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async createBoard(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "createTask", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async createTask(payload) {$/", "language": "JavaScript", "kind": "method", "signature": "(payload)", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      description: payload.description ?? null,$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "getProgressSummary", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async getProgressSummary(params = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(params = {})", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "listBoards", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async listBoards() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "listSprints", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async listSprints(params = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(params = {})", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "listTasks", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async listTasks(params = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(params = {})", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "listTeam", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async listTeam() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "moveTask", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async moveTask(id, { status, sprintId, boardId }) {$/", "language": "JavaScript", "kind": "method", "signature": "(id, { status, sprintId, boardId })", "scope": "Services", "scopeKind": "class"}, {"_type": "tag", "name": "priority", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      priority: payload.priority ?? 'medium',$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "sprint_id", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      sprint_id: payload.sprintId ?? null,$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "sprint_id", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      sprint_id: sprintId ?? null,$/", "language": "JavaScript", "kind": "property", "scope": "Services.moveTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      status: payload.status ?? 'todo',$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      status: status ?? null,$/", "language": "JavaScript", "kind": "property", "scope": "Services.moveTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "story_points", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      story_points: payload.points ?? null,$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^      title: payload.title,$/", "language": "JavaScript", "kind": "property", "scope": "Services.createTask.body", "scopeKind": "class"}, {"_type": "tag", "name": "updateTask", "path": "/home/kavia/workspace/code-generation/scrumflow-platform-3365-3374/scrum_mind_frontend/src/api/services.js", "pattern": "/^  async updateTask(id, changes) {$/", "language": "JavaScript", "kind": "method", "signature": "(id, changes)", "scope": "Services", "scopeKind": "class"}], "hash": "64ce4df1fab84141875cd5db13d83fcd", "format-version": 4, "code-base-name": "scrum_mind_frontend", "filename": "scrum_mind_frontend/src/api/services.js", "fields": [{"name": "assignee_id: payload.assigneeId ?? null,", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "board_id: boardId ?? null,", "scope": "Services.moveTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "board_id: payload.boardId,", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "description: payload.description ?? null,", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "priority: payload.priority ?? 'medium',", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "sprint_id: payload.sprintId ?? null,", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "sprint_id: sprintId ?? null,", "scope": "Services.moveTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "status: payload.status ?? 'todo',", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "status: status ?? null,", "scope": "Services.moveTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "story_points: payload.points ?? null,", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}, {"name": "title: payload.title,", "scope": "Services.createTask.body", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"74": ""}]}